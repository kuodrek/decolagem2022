function [Xp,CF] = Dinamica6GDL(X,U,H,AircraftData)
%% Dados do avião
geral = AircraftData{2,1};
controle = AircraftData{1,1};
g = geral(1,2);
m = controle(1,5);
W = m*g;
Ib = AircraftData{6,1};
Iyy = Ib(2,2);
x_tdp = 13;
x_tdn = 14;
%% Vetor de estados (Só é utilizado u, w, q, teta)
u = X(1);
v = X(2);
w = X(3);
% p = X(4);
q = X(5);
% r = X(6);
phi = X(10);
teta = X(11);
psi = X(12);
%% Vento no sistema NED (north, east, down)
Nvento = H(1);
Evento = H(2);
Dvento = H(3);
% Matriz de transformação do sistema terrestre móvel para o sistema do corpo (aula 4 de ec nos slides do ITA)
Cbv = [cos(teta)*cos(psi),cos(teta)*sin(psi),-sin(teta);...
    sin(phi)*cos(teta)*cos(psi)-cos(phi)*sin(psi),cos(phi)*cos(psi)+sin(phi)*sin(teta)*sin(psi),sin(phi)*cos(teta);...
    cos(phi)*sin(teta)*cos(psi)+sin(phi)*sin(psi),-sin(phi)*cos(psi)+cos(phi)*sin(teta)*sin(psi),cos(phi)*cos(teta)];
% Vento no sistema do corpo da aeronave (X, Y, Z)
Bvento = Cbv*[Nvento;Evento;Dvento];
uvento = Bvento(1);
vvento = Bvento(2);
wvento = Bvento(3);

u = u + uvento;
v = v + vvento;
w = w + wvento;
X(1) = u;
X(2) = v;
X(3) = w;

%% Velocidades e ângulos de ataque / derrapagem
V = sqrt(u^2 + v^2 + w^2);
alfa = atan(w/u);
beta = asin(v/V);
%% Forças e momentos aerodinâmicos e de tração
[Fa,Ft,Ha,Ht,CF] = fmsolver(X,U,AircraftData);

% Forças aerodinâmicas
D = Fa(1);
C = Fa(2);
L = Fa(3);

% Força tração
T = Ft(1);

% Momentos aerodinâmico e de tração
Ma = Ha(2);
Mt = Ht(2);

% Determinação das taxas de velocidade linear (u, v, w) no sistema da aeronave
Cba = [cos(alfa)*cos(beta),-cos(alfa)*sin(beta),-sin(alfa);
    sin(beta),cos(beta),0;
    sin(alfa)*cos(beta),-sin(alfa)*sin(beta),cos(alfa)];
ForcasCorpo = Cba*[-D;C;-L];

Xa = ForcasCorpo(1);
Za = ForcasCorpo(3);

%% Reação dos trens de pouso e nariz
R_n = W - T* sin(teta) - L;
R_tdn = (R_n - 1 / x_tdp * (Ma + Mt)) * (1 + x_tdn/x_tdp) ^ -1;
if R_tdn < 0
    R_tdn = 0;
end

R_tdp = 1 /(x_tdp) * (Ma + Mt + R_tdn*x_tdn);
P_cg = -R_tdp*x_tdp + R_tdn*x_tdn;

if R_n >= 0
    % Reação dos trens de pouso e nariz > 0 -> Avião correndo na pista
    % Referencia: runway
    up = (T* cos(teta) - D - mi*R_n)/m;
    wp = 0;
    if R_tdn > 0
        % Reação do trem de nariz > 0 -> Avião correndo na pista (não rotacionou)
        qp = 0;
        tetap = 0;
    else
        % Reação do trem de nariz = 0 -> Avião rotacionando
        qp = (Ma + Mt + P_cg) / Iyy;
        tetap = q;
        np = Vx;
        hp = 0;
    end
else
    % Reações dos trens de pouso e nariz = 0 -> Avião voando
    % Referencia: horizon
    up = (T* cos(teta) - D* cos(gama) - L* sin(gama))/m;
    wp = (T* sin(teta) + L* cos(gama) - W - D* sin(gama))/m;
    qp = (Ma + Mt)/Iyy;
    np = Vx;
    hp = Vz;
    tetap = q;
end

%% Acelerações da dinamica normal
% up = 1/m*(Xa+Xt) - w*q -g*sin(teta);
% wp = 1/m*(Za+Zt) + u*q +g*cos(teta);
% qp = 1/Iy*(Ma+Mt);
% np = u*cos(teta)+w*sin(teta);
% hp = u*sin(teta)-w*cos(teta);
% tetap = q;

%% Vetor de saída
Xp = [up 0 wp 0 qp 0 np 0 hp 0 tetap 0];
end